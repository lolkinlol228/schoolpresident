
const translations = {
  ru: {
    "hero.title": "–¶–µ–ª–∏",
    "hero.slogan": "–¶–µ–ª–∏ ‚Äî —Ç–≤–æ–π –≤—ã–±–æ—Ä –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω!",
    "hero.appeal": "–Ø —Ö–æ—á—É —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à—É —à–∫–æ–ª—É –ª—É—á—à–µ: –±–æ–ª—å—à–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π, –∫–æ–º—Ñ–æ—Ä—Ç –∏ –≤–µ—Å–µ–ª—å–µ –¥–ª—è –≤—Å–µ—Ö!",
    "about.title": "–û–±–æ –º–Ω–µ",
    "about.content": "–Ø ‚Äî —Å—Ç—É–¥–µ–Ω—Ç –∏–∑ 10–ë –∫–ª–∞—Å—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Ä–≥–∞–Ω–∏–∑—É–µ—Ç —à–∫–æ–ª—å–Ω—ã–µ –∫–≤–µ—Å—Ç—ã –∏ –º–µ—á—Ç–∞–µ—Ç —Å–¥–µ–ª–∞—Ç—å –Ω–∞—à—É —à–∫–æ–ª—É —è—Ä—á–µ! –£ –º–µ–Ω—è –µ—Å—Ç—å –æ–ø—ã—Ç –≤ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –∏ —è –∑–Ω–∞—é, –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —à–∫–æ–ª—å–Ω—É—é –∂–∏–∑–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –¥–ª—è –≤—Å–µ—Ö.",
    "program.title": "–ú–æ—è –ø—Ä–æ–≥—Ä–∞–º–º–∞",
    "program.items.0.title": "–ë–æ–ª—å—à–µ —à–∫–æ–ª—å–Ω—ã—Ö –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
    "program.items.0.description": "–û—Ä–≥–∞–Ω–∏–∑—É–µ–º –¥–∏—Å–∫–æ—Ç–µ–∫–∏, —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤–µ—á–µ—Ä–∞ –∏ –∫–æ–Ω–∫—É—Ä—Å—ã –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü",
    "program.items.1.title": "–£–ª—É—á—à–µ–Ω–∏–µ –º–µ–Ω—é —Å—Ç–æ–ª–æ–≤–æ–π",
    "program.items.1.description": "–ë–æ–ª—å—à–µ –≤–∫—É—Å–Ω—ã—Ö –∏ –∑–¥–æ—Ä–æ–≤—ã—Ö –±–ª—é–¥, —É—á–µ—Ç –ø–æ–∂–µ–ª–∞–Ω–∏–π —É—á–µ–Ω–∏–∫–æ–≤",
    "program.items.2.title": "–ó–æ–Ω–∞ –æ—Ç–¥—ã—Ö–∞ –¥–ª—è —É—á–µ–Ω–∏–∫–æ–≤",
    "program.items.2.description": "–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –¥–∏–≤–∞–Ω—ã, –∏–≥—Ä—ã –∏ –º–µ—Å—Ç–æ –¥–ª—è –æ–±—â–µ–Ω–∏—è –º–µ–∂–¥—É —É—Ä–æ–∫–∞–º–∏",
    "program.items.3.title": "Wi-Fi –≤ –∫–ª–∞—Å—Å–∞—Ö",
    "program.items.3.description": "–ë—ã—Å—Ç—Ä—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π",
    "program.items.4.title": "–ö—Ä—É–∂–∫–∏ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º",
    "program.items.4.description": "–ö–∏–±–µ—Ä—Å–ø–æ—Ä—Ç, —Ç–∞–Ω—Ü—ã, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è",
    "stats.title": "–ù–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è",
    "video.title": "–í–∏–¥–µ–æ-–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è",
    "video.subtitle": "–£–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –º–æ–∏—Ö –ø–ª–∞–Ω–∞—Ö",
    "testimonials.title": "–û—Ç–∑—ã–≤—ã —É—á–µ–Ω–∏–∫–æ–≤",
    "testimonials.subtitle": "–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –º–æ–∏ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∏",
    "support.title": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–º–ø–∞–Ω–∏–∏",
    "support.subtitle": "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞–º!",
    "feedback.title": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å",
    "feedback.subtitle": "–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏",
    "feedback.button": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
    "feedback.form.name": "–í–∞—à–µ –∏–º—è",
    "feedback.form.class": "–ö–ª–∞—Å—Å",
    "feedback.form.category": "–¢–∏–ø –æ–±—Ä–∞—â–µ–Ω–∏—è",
    "feedback.form.message": "–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
    "feedback.form.submit": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å",
    "feedback.success": "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!",
    "contact.title": "–ì–æ–ª–æ—Å—É–π –∑–∞ –ø–µ—Ä–µ–º–µ–Ω—ã!",
    "contact.subtitle": "–í–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º –Ω–∞—à—É —à–∫–æ–ª—É –ª—É—á—à–µ",
    "contact.cta": "–ü–æ–¥–¥–µ—Ä–∂–∏ —Ü–µ–ª–∏!",
    "common.learnMore": "–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ",
    "common.close": "–ó–∞–∫—Ä—ã—Ç—å"
  },
  ky: {
    "hero.title": "–ú–∞–∫—Å–∞—Ç—Ç–∞—Ä",
    "hero.slogan": "–ú–∞–∫—Å–∞—Ç—Ç–∞—Ä ‚Äî ”©–∑–≥”©—Ä“Ø“Ø “Ø—á“Ø–Ω —Ç–∞–Ω–¥–æ–æ“£!",
    "hero.appeal": "–ú–µ–Ω –±–∏–∑–¥–∏–Ω –º–µ–∫—Ç–µ–ø—Ç–∏ –∂–∞–∫—à—ã—Ä—Ç—É—É–Ω—É –∫–∞–∞–ª–∞–π–º: –∫”©–±“Ø—Ä”©”©–∫ –∏—à-—á–∞—Ä–∞–ª–∞—Ä, —ã“£–≥–∞–π–ª—É—É–ª—É–∫ –∂–∞–Ω–∞ –±–∞–∞—Ä—ã “Ø—á“Ø–Ω –∫”©“£“Ø–ª –∞—á—É—É!",
    "about.title": "–ú–µ–Ω –∂”©–Ω“Ø–Ω–¥”©",
    "about.content": "–ú–µ–Ω 10–ë –∫–ª–∞—Å—Å—ã–Ω–∞–Ω –æ–∫—É—É—á—É–º—É–Ω, –º–µ–∫—Ç–µ–ø—Ç–∏–∫ –∫–≤–µ—Å—Ç—Ç–µ—Ä–¥–∏ —É—é—à—Ç—É—Ä–∞–º –∂–∞–Ω–∞ –º–µ–∫—Ç–µ–±–∏–±–∏–∑–¥–∏ –∂–∞—Ä–∫—ã—Ä–∞–∞–∫ –∫—ã–ª—É—É–Ω—É –∞—Ä–º–∞–Ω–¥–∞–π–º! –ú–µ–Ω–∏–Ω –∏—à-—á–∞—Ä–∞–ª–∞—Ä–¥—ã ”©—Ç–∫”©—Ä“Ø“Ø —Ç–∞–∂—Ä—ã–π–±–∞–º –±–∞—Ä –∂–∞–Ω–∞ –º–µ–∫—Ç–µ–ø—Ç–∏–∫ –∂–∞—à–æ–æ–Ω—É –±–∞–∞—Ä—ã “Ø—á“Ø–Ω –∫—ã–∑—ã–∫—Ç—É—É—Ä–∞–∫–∫–∞ –∫—ã–ª—É—É–Ω—É –±–∏–ª–µ–º.",
    "program.title": "–ú–µ–Ω–∏–Ω –ø—Ä–æ–≥—Ä–∞–º–º–∞–º",
    "program.items.0.title": "–ö”©–±“Ø—Ä”©”©–∫ –º–µ–∫—Ç–µ–ø –º–∞–π—Ä–∞–º–¥–∞—Ä—ã",
    "program.items.0.description": "–ê–π —Å–∞–π—ã–Ω –¥–∏—Å–∫–æ—Ç–µ–∫–∞–ª–∞—Ä, —Ç–µ–º–∞—Ç–∏–∫–∞–ª—ã–∫ –∫–µ—á–µ–ª–µ—Ä –∂–∞–Ω–∞ –∫–æ–Ω–∫—É—Ä—Å—Ç–∞—Ä —É—é—à—Ç—É—Ä–∞–±—ã–∑",
    "program.items.1.title": "–ê—à–∫–∞–Ω–∞–¥–∞–≥—ã –º–µ–Ω—é–Ω—É –∂–∞–∫—à—ã—Ä—Ç—É—É",
    "program.items.1.description": "–ö”©–±“Ø—Ä”©”©–∫ –¥–∞–∞–º–¥—É—É –∂–∞–Ω–∞ –ø–∞–π–¥–∞–ª—É—É —Ç–∞–º–∞–∫-–∞—à—Ç–∞—Ä, –æ–∫—É—É—á—É–ª–∞—Ä–¥—ã–Ω –∫–∞–∞–ª–æ–æ–ª–æ—Ä—É–Ω —ç—Å–∫–µ –∞–ª—É—É",
    "program.items.2.title": "–û–∫—É—É—á—É–ª–∞—Ä “Ø—á“Ø–Ω —ç—Å –∞–ª—É—É –∑–æ–Ω–∞—Å—ã",
    "program.items.2.description": "–´“£–≥–∞–π–ª—É—É –¥–∏–≤–∞–Ω, –æ—é–Ω–¥–∞—Ä –∂–∞–Ω–∞ —Å–∞–±–∞–∫—Ç–∞—Ä–¥—ã–Ω –æ—Ä—Ç–æ—Å—É–Ω–¥–∞ –±–∞–∞—Ä–ª–∞—à—É—É “Ø—á“Ø–Ω –∂–∞–π",
    "program.items.3.title": "–ö–ª–∞—Å—Å—Ç–∞—Ä–¥–∞ Wi-Fi",
    "program.items.3.description": "–ë–∏–ª–∏–º –±–µ—Ä“Ø“Ø –¥–æ–ª–±–æ–æ—Ä–ª–æ—Ä—É –∂–∞–Ω–∞ –∏–∑–∏–ª–¥”©”©–ª”©—Ä “Ø—á“Ø–Ω —Ç–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç",
    "program.items.4.title": "–ö—ã–∑—ã–≥—É—É–ª—É–∫—Ç–∞—Ä –±–æ—é–Ω—á–∞ —á”©–π—Ä”©–ª”©—Ä",
    "program.items.4.description": "–ö–∏–±–µ—Ä—Å–ø–æ—Ä—Ç, –±–∏–π, –ø—Ä–æ–≥—Ä–∞–º–º–∞–ª–æ–æ –∂–∞–Ω–∞ –±–∞—à–∫–∞ –∑–∞–º–∞–Ω–±–∞–ø –±–∞–≥—ã—Ç—Ç–∞—Ä",
    "stats.title": "–ë–∏–∑–¥–∏–Ω –∂–µ—Ç–∏—à–∫–µ–Ω–¥–∏–∫—Ç–µ—Ä",
    "video.title": "–í–∏–¥–µ–æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è",
    "video.subtitle": "–ú–µ–Ω–∏–Ω –ø–ª–∞–Ω–¥–∞—Ä—ã–º –∂”©–Ω“Ø–Ω–¥”© –∫”©–±“Ø—Ä”©”©–∫ –±–∏–ª–∏“£–∏–∑",
    "testimonials.title": "–û–∫—É—É—á—É–ª–∞—Ä–¥—ã–Ω –ø–∏–∫–∏—Ä–ª–µ—Ä–∏",
    "testimonials.subtitle": "–ú–µ–Ω–∏–Ω –∫–ª–∞—Å—Å—Ç–∞—à—Ç–∞—Ä—ã–º —ç–º–Ω–µ –¥–µ–π—Ç",
    "support.title": "–ö–∞–º–ø–∞–Ω–∏—è–Ω—ã –∫–æ–ª–¥–æ–æ",
    "support.subtitle": "–ë–∏–∑–≥–µ –∫–æ—à—É–ª—É“£—É–∑!",
    "feedback.title": "–ö–∞–π—Ç–∞—Ä—ã–º –±–∞–π–ª–∞–Ω—ã—à",
    "feedback.subtitle": "”®–∑ –∏–¥–µ—è–ª–∞—Ä—ã“£—ã–∑ –º–µ–Ω–µ–Ω –±”©–ª“Ø—à“Ø“£“Ø–∑",
    "feedback.button": "–°—É–Ω—É—à –∂”©–Ω”©—Ç“Ø“Ø",
    "feedback.form.name": "–ê—Ç—ã“£—ã–∑",
    "feedback.form.class": "–ö–ª–∞—Å—Å",
    "feedback.form.category": "–ö–∞–π—Ä—ã–ª—É—É —Ç“Ø—Ä“Ø",
    "feedback.form.message": "–ë–∏–ª–¥–∏—Ä“Ø“Ø“£“Ø–∑",
    "feedback.form.submit": "–ñ”©–Ω”©—Ç“Ø“Ø",
    "feedback.success": "–°—É–Ω—É—à—É“£—É–∑ “Ø—á“Ø–Ω —Ä–∞—Ö–º–∞—Ç!",
    "contact.title": "”®–∑–≥”©—Ä“Ø“Ø “Ø—á“Ø–Ω –¥–æ–±—É—à –±–µ—Ä!",
    "contact.subtitle": "–ë–∏—Ä–≥–µ–ª–µ—à–∏–ø –º–µ–∫—Ç–µ–±–∏–±–∏–∑–¥–∏ –∂–∞–∫—à—ã—Ä—Ç–∞–±—ã–∑",
    "contact.cta": "–ú–∞–∫—Å–∞—Ç—Ç–∞—Ä–¥—ã –∫–æ–ª–¥–æ!",
    "common.learnMore": "–ö”©–±“Ø—Ä”©”©–∫ –±–∏–ª“Ø“Ø",
    "common.close": "–ñ–∞–±—É—É"
  },
  en: {
    "hero.title": "Goals",
    "hero.slogan": "Goals ‚Äî Your Choice for Change!",
    "hero.appeal": "I want to make our school better: more events, comfort and fun for everyone!",
    "about.title": "About Me",
    "about.content": "I'm a student from class 10B who organizes school quests and dreams of making our school brighter! I have experience in organizing events and I know how to make school life more interesting for everyone.",
    "program.title": "My Program",
    "program.items.0.title": "More School Celebrations",
    "program.items.0.description": "Organize discos, themed parties and competitions every month",
    "program.items.1.title": "Better Cafeteria Menu",
    "program.items.1.description": "More delicious and healthy dishes, considering student preferences",
    "program.items.2.title": "Student Relaxation Area",
    "program.items.2.description": "Comfortable sofas, games and a place to socialize between classes",
    "program.items.3.title": "Wi-Fi in Classrooms",
    "program.items.3.description": "Fast internet for educational projects and research",
    "program.items.4.title": "Interest Clubs",
    "program.items.4.description": "Esports, dancing, programming and other modern activities",
    "stats.title": "Our Achievements",
    "video.title": "Video Presentation",
    "video.subtitle": "Learn more about my plans",
    "testimonials.title": "Student Reviews",
    "testimonials.subtitle": "What my classmates say",
    "support.title": "Campaign Support",
    "support.subtitle": "Join us!",
    "feedback.title": "Feedback",
    "feedback.subtitle": "Share your ideas",
    "feedback.button": "Send Suggestion",
    "feedback.form.name": "Your Name",
    "feedback.form.class": "Class",
    "feedback.form.category": "Message Type",
    "feedback.form.message": "Your Message",
    "feedback.form.submit": "Send",
    "feedback.success": "Thank you for your suggestion!",
    "contact.title": "Vote for Change!",
    "contact.subtitle": "Together we'll make our school better",
    "contact.cta": "Support the Goals!",
    "common.learnMore": "Learn More",
    "common.close": "Close"
  }
};

let currentLanguage = 'ru';
let currentSlide = 0;
let sliderInterval;
let supportCountAnimated = false;
let progressAnimated = false;
let statsAnimated = false;


const testimonialsData = [
  {
    name: "–ê–Ω–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
    class: "9–ê", 
    quote: "–Ø –≤–µ—Ä—é, —á—Ç–æ –Ω–∞—à –∫–∞–Ω–¥–∏–¥–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —à–∫–æ–ª—É –∫ –ª—É—á—à–µ–º—É!",
    avatar: "üë©‚Äçüéì"
  },
  {
    name: "–ú–∞–∫—Å–∏–º –ü–µ—Ç—Ä–æ–≤",
    class: "11–ë",
    quote: "–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ –∫—Ç–æ-—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è, –∞ –Ω–µ –ø—É—Å—Ç—ã–µ –æ–±–µ—â–∞–Ω–∏—è!",
    avatar: "üë®‚Äçüéì"
  },
  {
    name: "–ï–ª–µ–Ω–∞ –ö–æ–∑–ª–æ–≤–∞", 
    class: "10–í",
    quote: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–æ–≤ –±—ã–ª–∞ –ø–æ—Ç—Ä—è—Å–∞—é—â–µ–π! –ñ–¥—É –Ω–æ–≤—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π.",
    avatar: "üë©‚Äçüéì"
  },
  {
    name: "–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤",
    class: "9–ì",
    quote: "Wi-Fi –≤ –∫–ª–∞—Å—Å–∞—Ö - —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è!",
    avatar: "üë®‚Äçüéì"
  }
];


document.addEventListener('DOMContentLoaded', function() {
  initApp();
});

function initApp() {
  setupLanguageButtons();
  setupScrollButton();
  setupContactButtons();
  setupNavScrollEffect();
  setupParallaxEffect();
  setupScrollAnimations();
  setupTestimonialsSlider();
  setupSocialSharing();
  setupSupportCounter();
  setupFeedbackModal();
  setupVideoPlayer();
  setupEnhancedHoverEffects();
  changeLanguage('ru');
  

  startSliderAutoplay();
}


function setupEnhancedHoverEffects() {
  const programCards = document.querySelectorAll('.program-card');
  const statCards = document.querySelectorAll('.stat-card');
  

  programCards.forEach(card => {
    card.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-15px) scale(1.05) rotateY(5deg)';
      this.style.boxShadow = '0 25px 50px rgba(86, 28, 36, 0.25), 0 0 30px rgba(86, 28, 36, 0.1)';
      this.style.borderColor = 'var(--campaign-dark-burgundy)';
      this.style.backgroundColor = 'rgba(255, 255, 255, 0.98)';
      
      const icon = this.querySelector('.program-icon');
      if (icon) {
        icon.style.transform = 'scale(1.3) rotate(10deg)';
        icon.style.textShadow = '0 0 20px rgba(86, 28, 36, 0.3)';
      }
    });
    
    card.addEventListener('mouseleave', function() {
      this.style.transform = '';
      this.style.boxShadow = '';
      this.style.borderColor = '';
      this.style.backgroundColor = '';
      
      const icon = this.querySelector('.program-icon');
      if (icon) {
        icon.style.transform = '';
        icon.style.textShadow = '';
      }
    });
  });

  statCards.forEach(card => {
    card.addEventListener('mouseenter', function() {
      this.style.transform = 'translateY(-10px) scale(1.03)';
      this.style.boxShadow = '0 20px 40px rgba(86, 28, 36, 0.2)';
    });
    
    card.addEventListener('mouseleave', function() {
      this.style.transform = '';
      this.style.boxShadow = '';
    });
  });
}


function setupLanguageButtons() {
  const buttons = document.querySelectorAll('.lang-btn');
  buttons.forEach(button => {
    button.addEventListener('click', function() {
      const lang = this.getAttribute('data-lang');
      changeLanguage(lang);
      

      buttons.forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');
    });
  });
}

function changeLanguage(lang) {
  currentLanguage = lang;
  const elements = document.querySelectorAll('[data-translate]');
  
  elements.forEach(element => {
    const key = element.getAttribute('data-translate');
    const translation = translations[lang][key];
    if (translation) {
      element.textContent = translation;
    }
  });
  

  updateTestimonialsLanguage(lang);
}

function updateTestimonialsLanguage(lang) {

}


function setupScrollButton() {
  const scrollBtn = document.querySelector('.scroll-btn');
  if (scrollBtn) {
    scrollBtn.addEventListener('click', function(e) {
      e.preventDefault();
      const target = this.getAttribute('data-target');
      const targetElement = document.getElementById(target);
      
      if (targetElement) {
        const offsetTop = targetElement.offsetTop - 80;
        window.scrollTo({
          top: offsetTop,
          behavior: 'smooth'
        });
      }
    });
  }
}

function setupContactButtons() {
  const contactBtn = document.querySelector('.contact .btn--primary');
  if (contactBtn) {
    contactBtn.addEventListener('click', function(e) {
      e.preventDefault();
      showSupportNotification();
      animateSupportCounter();
    });
  }
}


function setupParallaxEffect() {
  window.addEventListener('scroll', function() {
    const scrolled = window.pageYOffset;
    const parallaxLayers = document.querySelectorAll('.parallax-layer');
    
    parallaxLayers.forEach(layer => {
      const speed = parseFloat(layer.dataset.speed);
      const yPos = -(scrolled * speed);
      layer.style.transform = `translate3d(0, ${yPos}px, 0)`;
    });
    
   
    const hero = document.querySelector('.hero');
    const heroOffset = hero.offsetTop;
    const heroHeight = hero.offsetHeight;
    
    if (scrolled < heroHeight) {
      hero.style.backgroundPositionY = `${scrolled * 0.5}px`;
    }
    
    
    const socialSidebar = document.querySelector('.social-sidebar');
    if (scrolled > 300) {
      socialSidebar.classList.add('visible');
    } else {
      socialSidebar.classList.remove('visible');
    }
  });
}


function setupScrollAnimations() {
  const observerOptions = {
    threshold: 0.2,
    rootMargin: '0px 0px -50px 0px'
  };
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animated');
        
 
        if (entry.target.classList.contains('stats-section') && !statsAnimated) {
          setTimeout(() => animateStatCounters(), 300);
          statsAnimated = true;
        }
        
      
        if (entry.target.classList.contains('support-section') && !progressAnimated) {
          setTimeout(() => animateSupportProgress(), 500);
          progressAnimated = true;
        }
      }
    });
  }, observerOptions);
  

  document.querySelectorAll('.animate-on-scroll').forEach(el => {
    observer.observe(el);
  });
}


function animateStatCounters() {
  const counters = document.querySelectorAll('.stat-number');
  
  counters.forEach((counter, index) => {
    const target = parseInt(counter.getAttribute('data-count'));
    const duration = 2000;
    const startDelay = index * 200; 
    
    setTimeout(() => {
      let current = 0;
      const increment = target / (duration / 50);
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        
          counter.style.transform = 'scale(1.1)';
          setTimeout(() => {
            counter.style.transform = 'scale(1)';
          }, 200);
        }
        counter.textContent = Math.floor(current);
      }, 50);
    }, startDelay);
  });
}


function setupTestimonialsSlider() {
  const dots = document.querySelectorAll('.dot');
  
  dots.forEach((dot, index) => {
    dot.addEventListener('click', () => {
      showSlide(index);
      resetSliderAutoplay();
    });
  });
}

function showSlide(index) {
  const cards = document.querySelectorAll('.testimonial-card');
  const dots = document.querySelectorAll('.dot');
  

  cards.forEach(card => {
    card.classList.remove('active');
  });
  

  dots.forEach(dot => {
    dot.classList.remove('active');
  });

  if (cards[index]) {
    cards[index].classList.add('active');
    dots[index].classList.add('active');
  }
  
  currentSlide = index;
}

function nextSlide() {
  const totalSlides = document.querySelectorAll('.testimonial-card').length;
  const nextIndex = (currentSlide + 1) % totalSlides;
  showSlide(nextIndex);
}

function startSliderAutoplay() {
  sliderInterval = setInterval(nextSlide, 4000);
}

function resetSliderAutoplay() {
  clearInterval(sliderInterval);
  startSliderAutoplay();
}


function setupSocialSharing() {
  const socialButtons = document.querySelectorAll('.social-btn');
  
  socialButtons.forEach(button => {
    button.addEventListener('click', function() {
      const platform = this.getAttribute('data-platform');
      const shareCount = this.querySelector('.share-count');
      

      this.style.transform = 'translateY(-6px) scale(1.15) rotate(5deg)';
      this.style.boxShadow = '0 15px 30px rgba(86, 28, 36, 0.3)';
      
      setTimeout(() => {
        this.style.transform = '';
        this.style.boxShadow = '';
      }, 300);
      const currentCount = parseInt(shareCount.textContent);
      animateCounterToValue(shareCount, currentCount, currentCount + 1);
      

      showSharingNotification(platform);
    });
  });
}

function showSharingNotification(platform) {
  const messages = {
    ru: `–ü–æ–¥–µ–ª–∏–ª–∏—Å—å –≤ ${platform}!`,
    ky: `${platform} –¥–∞–Ω –±”©–ª“Ø—à—Ç“Ø–∫!`,
    en: `Shared on ${platform}!`
  };
  
  showNotification(messages[currentLanguage], 'success');
}


function setupSupportCounter() {
  const counter = document.getElementById('supportCounter');
  let currentCount = 247;
  
  setInterval(() => {
    if (Math.random() < 0.3) {
      currentCount += Math.floor(Math.random() * 3) + 1;
      animateCounterToValue(counter, parseInt(counter.textContent), currentCount);
      

      if (currentCount % 50 === 0) {
        showMilestoneCelebration();
      }
    }
  }, 10000);
}

function animateSupportCounter() {
  const counter = document.getElementById('supportCounter');
  const currentCount = parseInt(counter.textContent);
  const newCount = currentCount + Math.floor(Math.random() * 5) + 1;
  
  animateCounterToValue(counter, currentCount, newCount);
}

function animateCounterToValue(element, from, to) {
  const duration = 1000;
  const increment = (to - from) / (duration / 30);
  let current = from;
  
  const timer = setInterval(() => {
    current += increment;
    if (current >= to) {
      current = to;
      clearInterval(timer);
    }
    element.textContent = Math.floor(current);
  }, 30);
}

function animateSupportProgress() {
  const progressFill = document.querySelector('.progress-fill');
  const percentage = parseFloat(progressFill.getAttribute('data-progress'));
  
  let currentProgress = 0;
  const increment = percentage / 50;
  
  const timer = setInterval(() => {
    currentProgress += increment;
    if (currentProgress >= percentage) {
      currentProgress = percentage;
      clearInterval(timer);
    }
    progressFill.style.width = currentProgress + '%';
  }, 40);
}

function showMilestoneCelebration() {
  const celebration = document.getElementById('celebration');
  celebration.style.display = 'block';
  
  setTimeout(() => {
    celebration.style.display = 'none';
  }, 3000);
}


function setupFeedbackModal() {
  const feedbackBtn = document.getElementById('feedbackBtn');
  const modal = document.getElementById('feedbackModal');
  const closeBtn = modal.querySelector('.modal-close');
  const overlay = modal.querySelector('.modal-overlay');
  const form = document.getElementById('feedbackForm');
  
  
  feedbackBtn.addEventListener('click', () => {
    modal.classList.remove('hidden');
    setTimeout(() => modal.classList.add('visible'), 10);
  });
  

  const closeModal = () => {
    modal.classList.remove('visible');
    setTimeout(() => modal.classList.add('hidden'), 300);
    resetForm();
  };
  
  closeBtn.addEventListener('click', closeModal);
  overlay.addEventListener('click', closeModal);
  

  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    if (validateForm()) {
      showSuccessMessage();
      setTimeout(() => {
        closeModal();
      }, 2000);
    }
  });

  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && modal.classList.contains('visible')) {
      closeModal();
    }
  });
}

function validateForm() {
  const name = document.getElementById('studentName').value.trim();
  const studentClass = document.getElementById('studentClass').value.trim();
  const category = document.getElementById('feedbackCategory').value;
  const message = document.getElementById('feedbackMessage').value.trim();
  
  if (!name || !studentClass || !category || !message) {
    showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
    return false;
  }
  
  return true;
}

function showSuccessMessage() {
  const form = document.getElementById('feedbackForm');
  const successMessage = document.getElementById('successMessage');
  
  form.style.display = 'none';
  successMessage.classList.remove('hidden');
}

function resetForm() {
  const form = document.getElementById('feedbackForm');
  const successMessage = document.getElementById('successMessage');
  
  form.reset();
  form.style.display = 'block';
  successMessage.classList.add('hidden');
}


function setupVideoPlayer() {
  const videoPlaceholder = document.querySelector('.video-placeholder');
  
  videoPlaceholder.addEventListener('click', function() {
 
    this.style.transform = 'scale(0.95)';
    setTimeout(() => {
      this.style.transform = 'scale(1.02)';
      setTimeout(() => {
        this.style.transform = '';
      }, 200);
    }, 100);
    
    showNotification('–í–∏–¥–µ–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å–∞–π—Ç–∞!', 'info');
  });
}


function setupNavScrollEffect() {
  window.addEventListener('scroll', function() {
    const nav = document.querySelector('.nav');
    if (window.pageYOffset > 100) {
      nav.style.background = 'rgba(255, 255, 255, 0.98)';
      nav.style.boxShadow = '0 2px 20px rgba(0, 0, 0, 0.1)';
    } else {
      nav.style.background = 'rgba(255, 255, 255, 0.95)';
      nav.style.boxShadow = 'none';
    }
  });
}


function showNotification(message, type = 'success') {
  const notification = document.createElement('div');
  notification.textContent = message;
  
  const colors = {
    success: '#561C24',
    error: '#DC2626', 
    info: '#2563EB'
  };
  
  notification.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: ${colors[type]};
    color: white;
    padding: 16px 24px;
    border-radius: 12px;
    font-weight: 600;
    z-index: 10000;
    opacity: 0;
    transform: translateX(100%) scale(0.8);
    transition: all 400ms cubic-bezier(0.68, -0.55, 0.265, 1.55);
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
    max-width: 300px;
  `;
  
  document.body.appendChild(notification);
  
  setTimeout(() => {
    notification.style.opacity = '1';
    notification.style.transform = 'translateX(0) scale(1)';
  }, 10);
  
  setTimeout(() => {
    notification.style.opacity = '0';
    notification.style.transform = 'translateX(100%) scale(0.8)';
    setTimeout(() => {
      if (notification.parentNode) {
        document.body.removeChild(notification);
      }
    }, 400);
  }, 3000);
}

function showSupportNotification() {
  const messages = {
    ru: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! üéâ',
    ky: '–ö–æ–ª–¥–æ–æ “Ø—á“Ø–Ω —Ä–∞—Ö–º–∞—Ç! üéâ',
    en: 'Thank you for your support! üéâ'
  };
  
  showNotification(messages[currentLanguage], 'success');
}


document.addEventListener('keydown', function(e) {

  if (e.key === '1') {
    changeLanguage('ru');
    updateActiveButton('ru');
  } else if (e.key === '2') {
    changeLanguage('ky');
    updateActiveButton('ky');
  } else if (e.key === '3') {
    changeLanguage('en');
    updateActiveButton('en');
  }
  
 
  if (e.key === 'ArrowLeft') {
    const prevIndex = currentSlide > 0 ? currentSlide - 1 : testimonialsData.length - 1;
    showSlide(prevIndex);
    resetSliderAutoplay();
  } else if (e.key === 'ArrowRight') {
    nextSlide();
    resetSliderAutoplay();
  }
});

function updateActiveButton(lang) {
  const buttons = document.querySelectorAll('.lang-btn');
  buttons.forEach(btn => {
    btn.classList.remove('active');
    if (btn.getAttribute('data-lang') === lang) {
      btn.classList.add('active');
    }
  });
}


const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');

if (prefersReducedMotion.matches) {

  clearInterval(sliderInterval);
  

  document.documentElement.style.setProperty('--duration-fast', '50ms');
  document.documentElement.style.setProperty('--duration-normal', '100ms');
}


  document.addEventListener('DOMContentLoaded', function() {
            const galleryItems = document.querySelectorAll('.gallery-item');
            galleryItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    this.style.transform = 'scale(1.05)';
                    this.style.boxShadow = '0 10px 15px -3px rgba(0, 0, 0, 0.04), 0 4px 6px -2px rgba(0, 0, 0, 0.02)';
                });

                item.addEventListener('mouseleave', function() {
                    this.style.transform = 'scale(1)';
                    this.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.04), 0 2px 4px -1px rgba(0, 0, 0, 0.02)';
                });
            });
        });

   
        function handleResize() {
            const galleryGrid = document.querySelector('[style*="grid-template-columns"]');
            if (window.innerWidth <= 768) {
                galleryGrid.style.gridTemplateColumns = 'repeat(auto-fit, minmax(200px, 1fr))';
                galleryGrid.style.gap = '16px';
            } else {
                galleryGrid.style.gridTemplateColumns = 'repeat(auto-fit, minmax(250px, 1fr))';
                galleryGrid.style.gap = '20px';
            }
        }

        window.addEventListener('resize', handleResize);
        handleResize(); 